package explorer.feature

/**
 * Поиск строки в строке.
 *
 * Алгоритм Бойера-Мура
 *
 * Как видно, функция boyerMooreSearch() принимает на вход строку text, в которой производится поиск, и строку pattern, которую мы ищем в text.
 * Функция использует вспомогательную функцию buildLast(), которая строит таблицу last, в которой для каждого символа из pattern хранится его последнее вхождение в pattern.
 * Затем в основном цикле производится поиск с использованием этой таблицы.
 */

// Функция для поиска подстроки pattern в строке text с использованием алгоритма Бойера-Мура
fun boyerMooreSearch(text: String, pattern: String): Int {
    // Построение таблицы last для использования в алгоритме
    val last = buildLast(pattern)
    // Начальное значение индекса в тексте, с которого начинается поиск
    var t = pattern.length - 1
    // Начальное значение индекса в шаблоне, с которым сравнивается текст
    var p = pattern.length - 1

    // Цикл поиска
    while (t < text.length) {
        // Если символы совпадают, продолжаем сравнение
        if (text[t] == pattern[p]) {
            // Если шаблон закончился, значит мы нашли совпадение
            if (p == 0) {
                return t
            }
            // Иначе продолжаем сравнивать символы
            p--
            t--
        } else {
            // Если символы не совпадают, перемещаем индекс в тексте в соответствии с таблицей last
            t += pattern.length - minOf(p, 1 + last[text[t].code])
            // Возвращаем индекс в шаблоне в конец
            p = pattern.length - 1
        }
    }
    // Если мы дошли до конца текста и не нашли совпадений, возвращаем -1
    return -1
}

// Вспомогательная функция для построения таблицы last
private fun buildLast(pattern: String): IntArray {
    // Создаем массив длиной 128 (коды символов ASCII)
    val last = IntArray(128) { -1 }
    // Заполняем массив последними индексами символов в шаблоне
    for (i in pattern.indices) {
        last[pattern[i].code] = i
    }
    // Возвращаем полученный массив
    return last
}
